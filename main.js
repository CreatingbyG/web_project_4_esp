!function(){"use strict";var t={d:function(e,n){for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}};function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}t.d({},{h:function(){return X},w:function(){return rt}});var r=function(){function t(e,n,r){var o=this,i=e.name,a=e.link,u=e.likes,c=e.owner,l=void 0===c?{}:c,s=e._id;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.templateSelector=n,this.name=i,this.link=a,this._likes=u||[],this.user=r._id,this.owner=l._id||{},this.cardId=s||null,this.ownerName=l.name,this.userName=r.name,this.likeCountElement=null,this._isLiked=this._likes.some((function(t){return t.name===o.userName}))}var e,r;return e=t,(r=[{key:"_createCardElement",value:function(){var t=this,e=document.querySelector(this.templateSelector).content.querySelector(".elements").cloneNode(!0);e.querySelector(".card__image-text").textContent=this.name;var n=e.querySelector(".card-photo");n.src=this.link,n.alt=this.name,this.likeIcon=e.querySelector(".icons__dislike"),this._listeners();var r=e.querySelector(".icons__delete");return this.user!==this.owner&&(r.style.display="none"),r.addEventListener("click",(function(e){t.cardToDelete=e.target.closest(".elements"),rt.open(t.cardToDelete,t.cardId)})),this.likeCountElement=e.querySelector(".icons__like_number"),this.likeCountElement.textContent=this._likes.length>0?this._likes.length:"",0===this._likes.length?this.likeCountElement.style.display="none":this.likeCountElement.style.display="block",this.myLike(),e}},{key:"_handleToggleClick",value:function(){this._isLiked=!this._isLiked,this.likeIcon.classList.toggle("icons__like"),this.handleLike(this.cardId)}},{key:"handleLike",value:function(t){var e=this;this._isLiked?X.addLike(this.cardId).then((function(t){t&&t.likes&&(e._likes=t.likes,e.likeCountElement&&(e.likeCountElement.textContent=e._likes.length>0?e._likes.length:"",e.likeCountElement.style.display="block"))})):X.removeLike(t).then((function(t){t&&t.likes&&(e._likes=t.likes,e.likeCountElement&&(e.likeCountElement.textContent=e._likes.length>0?e._likes.length:""))}))}},{key:"myLike",value:function(){this._isLiked&&this.likeIcon.classList.add("icons__like")}},{key:"createCard",value:function(){return this._createCardElement()}},{key:"_listeners",value:function(){var t=this;this.likeIcon.addEventListener("click",(function(){t._handleToggleClick()}))}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),o=document.querySelectorAll(".popup"),i=document.querySelector(".popup_profile"),a=document.querySelector(".popup_images"),u=function(t){"Escape"===t.key&&(l(),s())},c=function(t){t.target.classList.contains("popup_opened")&&(l(),s())};function l(){o.forEach((function(t){t.classList.remove("popup_opened")}))}function s(t){document.removeEventListener("keydown",u),document.removeEventListener("click",c)}function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}function p(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==f(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==f(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===f(o)?o:String(o)),r)}var o}var y=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupSelector=e,this._popup=document.querySelector(this._popupSelector),this._form=this._popup.firstElementChild,this._closeButton=this._popup.querySelector(".popup__container-btn-closed"),this._handleEscClose=this._handleEscClose.bind(this),this._handleOverlayClose=this._handleOverlayClose.bind(this),this._formSubmitHandler=this._formSubmitHandler.bind(this)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),this._popup.addEventListener("click",this._handleOverlayClose),this.setEventListeners()}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),this._popup.removeEventListener("click",this._handleOverlayClose),this._closeButton.removeEventListener("click",this.close.bind(this))}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&(l(),s())}},{key:"_formSubmitHandler",value:function(t){t.preventDefault()}},{key:"_handleOverlayClose",value:function(t){t.target===this._popup&&(l(),s())}},{key:"setEventListeners",value:function(){this._closeButton.addEventListener("click",this.close.bind(this))}}])&&p(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function d(t){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},d(t)}function h(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==d(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==d(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===d(o)?o:String(o)),r)}var o}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=_(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},m.apply(this,arguments)}function v(t,e){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},v(t,e)}function _(t){return _=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},_(t)}var b=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&v(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=_(r);if(o){var n=_(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===d(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._image=e._popup.querySelector("#img-card-popup"),e._imageText=e._popup.querySelector(".img-card-name"),e}return e=a,(n=[{key:"_handleImageClick",value:function(t){var e=t.target.src,n=t.target.alt;this._imageText.textContent=t.target.alt,document.querySelector(".popup_preview_images").classList.add("popup_opened");var r=this._image;r.setAttribute("src",e),r.setAttribute("alt",n),document.addEventListener("keydown",this._handlePopupKeyDown.bind(this)),document.addEventListener("click",this._handlePopupClick.bind(this))}},{key:"open",value:function(t,e){this._image.src=e,this._image.alt=t,this._imageText.textContent=t,m(_(a.prototype),"open",this).call(this)}}])&&h(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(y);function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function g(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==k(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===k(o)?o:String(o)),r)}var o}var S=function(){function t(e,n){var r=e.data,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._initialCards=r,this._renderer=o,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"render",value:function(){var t=this;this._initialCards.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){this._container.append(t)}}])&&g(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),E=document.querySelector(".profile__description-name"),w=document.querySelector(".profile__description-info"),C=document.querySelector(".popup__container-texts-input-name"),j=document.querySelector(".popup__container-texts-input-info"),O=document.querySelector(".popup__container-texts-input-title"),P=document.querySelector(".popup__container-texts-input-link"),L=document.querySelector(".popup__handlers-button-change"),I=document.querySelector(".popup__handlers-button-deleting"),x=document.querySelector(".popup__handlers-button-create"),T=document.querySelector(".popup__handlers-button");function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function A(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==q(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===q(o)?o:String(o)),r)}var o}var B={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"popup__button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},D=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}var e,n;return e=t,(n=[{key:"_toggleInputError",value:function(t,e){var n=t.nextElementSibling;e?(t.classList.add(this._inputErrorClass),n.textContent=t.validationMessage,n.classList.add(this._errorClass)):(t.classList.remove(this._inputErrorClass),n.classList.remove(this._errorClass),n.textContent="")}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._toggleInputError(t,!1):this._toggleInputError(t,!0)}},{key:"_hasInvalidInput",value:function(t){return t.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(t,e){this._hasInvalidInput(t)?(e.disabled=!0,e.classList.add(this._inactiveButtonClass),e.classList.add("disabled-hover")):(e.disabled=!1,e.classList.remove(this._inactiveButtonClass),e.classList.remove("disabled-hover"))}},{key:"_setEventListeners",value:function(t){var e=this,n=Array.from(t.querySelectorAll(this._inputSelector)),r=t.querySelector(this._submitButtonSelector);this._toggleButtonState(n,r),n.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState(n,r)}))}))}},{key:"enableValidation",value:function(){var t=this;document.querySelectorAll(".form__input-error_active").forEach((function(t){t.classList.remove("form__input-error_active")})),Array.from(document.querySelectorAll(this._formSelector)).forEach((function(e){e.addEventListener("submit",(function(t){t.preventDefault()})),t._setEventListeners(e)}))}},{key:"_enterKeydownEventProfile",value:function(t){var e=document.querySelector(".popup__container-texts");if("Enter"===t.key){t.preventDefault();var n=this._hasInvalidInput(Array.from(e.querySelectorAll(".form__input")));n||(E.textContent=C.value,w.textContent=j.value,i.classList.remove("popup_opened")),this._toggleInputError(C,n),this._toggleInputError(j,n)}}},{key:"_enterKeyDownEventImages",value:function(t){var e=document.querySelector(".popup__container-texts-images");if("Enter"===t.key){t.preventDefault();var n=this._hasInvalidInput(Array.from(e.querySelectorAll(".form__input")));if(!n){var o={name:O.value,link:P.value},i=new r(o,"#template-cards");document.querySelector(".contelements").prepend(i.createCard()),a.classList.remove("popup_opened")}this._toggleInputError(O,n),this._toggleInputError(P,n),s()}}},{key:"_handlePopupKeyDown",value:function(t){"Escape"===t.key&&l()}},{key:"_handlePopupClick",value:function(t){t.target.classList.contains("popup_opened")&&l()}}])&&A(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function U(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,H(r.key),r)}}function V(){return V="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=G(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},V.apply(this,arguments)}function N(t,e){return N=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},N(t,e)}function z(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function G(t){return G=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},G(t)}function H(t){var e=function(t,e){if("object"!==R(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===R(e)?e:String(e)}var K=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&N(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=G(r);if(o){var n=G(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===R(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return z(t)}(this,t)});function a(t,e){var n,r,o,u;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),r=z(n=i.call(this,t)),u=function(t){t.preventDefault(),n._getNewValues(),n.close()},(o=H(o="_formSubmitHandler"))in r?Object.defineProperty(r,o,{value:u,enumerable:!0,configurable:!0,writable:!0}):r[o]=u,n._submitCallBack=e,n._formSubmitHandler=n._formSubmitHandler.bind(z(n)),n._formValidator=new D(B),n}return e=a,(n=[{key:"_getInputValues",value:function(){var t=this;return this._inputList=this._form.querySelectorAll(".form__input"),this._formValues={},this._inputList.forEach((function(e){t._formValues[e.name]=e.value})),this._formValues}},{key:"_getNewValues",value:function(){"confirm"==this._form.id?this._submitCallBack(this.cardToDelete,this.cardId):this._submitCallBack(this._getInputValues())}},{key:"setEventListeners",value:function(){V(G(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._formSubmitHandler)}},{key:"open",value:function(t,e){V(G(a.prototype),"open",this).call(this),this._formValidator.enableValidation(),this.cardToDelete=t,this.cardId=e}},{key:"close",value:function(t){V(G(a.prototype),"close",this).call(this),this._form.reset(),t&&(this._form.id="delete")}}])&&U(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(y);function J(t){return J="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},J(t)}function M(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==J(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==J(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===J(o)?o:String(o)),r)}var o}var $=function(){function t(e){var n=e.nameSelector,r=e.infoSelector,o=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameElement=document.querySelector(n),this._infoElement=document.querySelector(r),this._avatarElement=document.querySelector(o),this._nameInput=document.querySelector(".popup__container-texts-input-name"),this._jobInput=document.querySelector(".popup__container-texts-input-info")}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,job:this._infoElement.textContent,avatar:this._avatarElement.src}}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.job,r=t.avatar;e&&(this._nameElement.textContent=e),n&&(this._infoElement.textContent=n),r&&(this._avatarElement.src=r)}}])&&M(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function F(t){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},F(t)}function Q(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==F(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==F(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===F(o)?o:String(o)),r)}var o}function W(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var X=new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._token="64bdc8e1-28e5-4d06-acdb-847b17c56560",this._groupId="web_es_09",this._url="https://around.nomoreparties.co/v1/".concat(this._groupId,"/")}var e,n;return e=t,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this._url,"cards"),{headers:{authorization:this._token}}).then((function(t){if(t.ok)return t.json()}))}},{key:"addNewCard",value:function(t){return fetch("".concat(this._url,"cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify(t)}).then((function(t){if(t.ok)return t.json()}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"users/me"),{method:"GET",headers:{authorization:this._token}}).then((function(t){if(t.ok)return t.json()}))}},{key:"getUserInfoChangedPatch",value:function(t){return fetch("".concat(this._url,"users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:t.name,about:t.job})}).then((function(t){if(t.ok)return t.json()}))}},{key:"getUserInfoChanged",value:function(){return fetch("".concat(this._url,"users/me"),{method:"GET",headers:{authorization:this._token}}).then((function(t){if(t.ok)return t.json()}))}},{key:"updateAvatar",value:function(t){return fetch("".concat(this._url,"users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:t.link})}).then((function(t){if(t.ok)return t.json();throw new Error("Error updating avatar: ".concat(t.statusText))})).catch((function(t){console.error("Error in updateAvatar: ".concat(t))}))}},{key:"getInfoAvatar",value:function(){return fetch("".concat(this._url,"users/me/avatar"),{method:"GET",headers:{authorization:this._token}}).then((function(t){if(t.ok)return t.json()})).catch((function(t){console.error("Error in updateAvatar: ".concat(t))}))}},{key:"deleteCard",value:function(t){return fetch("".concat(this._url,"cards/").concat(t),{method:"DELETE",headers:{authorization:this._token}}).then((function(t){if(!t.ok)throw new Error("Error deleting card: ".concat(t.statusText));return t.json()})).catch((function(t){console.error("Error in deleteCard: ".concat(t))}))}},{key:"addLike",value:function(t){return fetch("".concat(this._url,"cards/likes/").concat(t),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(t){if(t.ok)return t.json();throw new Error("Error adding like: ".concat(t.statusText))})).catch((function(t){console.error("Error in addLike: ".concat(t))}))}},{key:"removeLike",value:function(t){return fetch("".concat(this._url,"cards/likes/").concat(t),{method:"DELETE",headers:{authorization:this._token}}).then((function(t){if(t.ok)return t.json();throw new Error("Error removing like: ".concat(t.statusText))})).catch((function(t){console.error("Error in removeLike: ".concat(t))}))}}])&&Q(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}()),Y=new $({nameSelector:".profile__description-name",infoSelector:".profile__description-info",avatarSelector:".avatar"});Promise.all([X.getUserInfoChanged(),X.getInitialCards()]).then((function(t){var e,n,o=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,a,u=[],c=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(u.push(r.value),u.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return u}}(e,n)||function(t,e){if(t){if("string"==typeof t)return W(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?W(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],a=o[1];Y.setUserInfo(i);var u=new S({data:a,renderer:function(t){var e=new r(t,"#template-cards",i).createCard();u.addItem(e)}},".contelements");u.render();var c=document.querySelector(".add-button"),l=new K(".popup_images",(function(t){x.textContent="Creando...",X.addNewCard(t).then((function(t){var e=t.name,n=t.link,o=t._id,a=t.owner,u=new r({name:e,link:n,_id:o,likes:[],owner:a},"#template-cards",i);document.querySelector(".contelements").prepend(u.createCard()),x.textContent="Crear"}))}));c.addEventListener("click",(function(){l.open()}))})).catch((function(t){x.textContent="Crear"})),document.addEventListener("click",(function(t){if(t.target.classList.contains("card-photo")){var e={src:t.target.src,alt:t.target.alt,name:t.target.alt};new b(".popup_preview_images").open(e.name,e.src)}}));var Z=document.querySelector(".edit-button");X.getUserInfo(Y);var tt=new K(".popup_profile",(function(t){Y.setUserInfo(t),T.textContent="Guardando...",X.getUserInfoChangedPatch(t).then((function(){Y.setUserInfo(t),T.textContent="Guardar"})).catch((function(t){T.textContent="Guardar"}))}));Z.addEventListener("click",(function(){var t=Y._nameInput,e=Y._jobInput,n=Y.getUserInfo(),r=n.name,o=n.job;t.value=r,e.value=o,tt.open()}));var et=document.querySelector(".vector"),nt=new K(".popup_change_profile",(function(t){L.textContent="Guardando...",X.updateAvatar(t).then((function(t){document.querySelector(".avatar").src=t.avatar,L.textContent="Guardar"})).catch((function(t){L.textContent="Guardar"}))}));et.addEventListener("click",(function(t){t.preventDefault(),nt.open()}));var rt=new K(".popup_deleting_cards",(function(t,e){I.textContent="Eliminando...",X.deleteCard(e).then((function(){t.remove(),I.textContent="Si"})).catch((function(t){console.error("Error in deleting card: ".concat(t)),I.textContent="Si"}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,